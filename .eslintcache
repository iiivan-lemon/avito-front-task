[{"/home/ivan_lemon/avito_front_task/avito-front-task/src/index.tsx":"1","/home/ivan_lemon/avito_front_task/avito-front-task/src/Routes.tsx":"2","/home/ivan_lemon/avito_front_task/avito-front-task/src/itemPage.tsx":"3","/home/ivan_lemon/avito_front_task/avito-front-task/src/Main.tsx":"4","/home/ivan_lemon/avito_front_task/avito-front-task/src/components/item.tsx":"5","/home/ivan_lemon/avito_front_task/avito-front-task/src/components/header.tsx":"6","/home/ivan_lemon/avito_front_task/avito-front-task/src/components/refresh.tsx":"7","/home/ivan_lemon/avito_front_task/avito-front-task/src/configureStore.ts":"8","/home/ivan_lemon/avito_front_task/avito-front-task/src/App.tsx":"9","/home/ivan_lemon/avito_front_task/avito-front-task/src/mockData.js":"10","/home/ivan_lemon/avito_front_task/avito-front-task/src/app/store.ts":"11","/home/ivan_lemon/avito_front_task/avito-front-task/src/apiRoute.ts":"12","/home/ivan_lemon/avito_front_task/avito-front-task/src/app/hooks.ts":"13","/home/ivan_lemon/avito_front_task/avito-front-task/src/app/store/post/reducer.ts":"14","/home/ivan_lemon/avito_front_task/avito-front-task/src/app/store/post/action.ts":"15","/home/ivan_lemon/avito_front_task/avito-front-task/src/app/store/post/types.ts":"16","/home/ivan_lemon/avito_front_task/avito-front-task/src/components/comment.tsx":"17","/home/ivan_lemon/avito_front_task/avito-front-task/src/app/store/comments/reducer.ts":"18","/home/ivan_lemon/avito_front_task/avito-front-task/src/app/store/comments/types.ts":"19","/home/ivan_lemon/avito_front_task/avito-front-task/src/app/store/comments/action.ts":"20"},{"size":761,"mtime":1666559626749,"results":"21","hashOfConfig":"22"},{"size":424,"mtime":1666691389133,"results":"23","hashOfConfig":"22"},{"size":1490,"mtime":1666692738163,"results":"24","hashOfConfig":"22"},{"size":1763,"mtime":1666688447033,"results":"25","hashOfConfig":"22"},{"size":3611,"mtime":1666702397518,"results":"26","hashOfConfig":"22"},{"size":1171,"mtime":1666636946558,"results":"27","hashOfConfig":"22"},{"size":905,"mtime":1666637067688,"results":"28","hashOfConfig":"22"},{"size":578,"mtime":1666559626717,"results":"29","hashOfConfig":"22"},{"size":564,"mtime":1666559626469,"results":"30","hashOfConfig":"22"},{"size":133,"mtime":1666559626765,"results":"31","hashOfConfig":"22"},{"size":870,"mtime":1666695479470,"results":"32","hashOfConfig":"22"},{"size":82,"mtime":1666559626545,"results":"33","hashOfConfig":"22"},{"size":364,"mtime":1666613971702,"results":"34","hashOfConfig":"22"},{"size":1369,"mtime":1666699945375,"results":"35","hashOfConfig":"22"},{"size":1233,"mtime":1666699945315,"results":"36","hashOfConfig":"22"},{"size":562,"mtime":1666695457366,"results":"37","hashOfConfig":"22"},{"size":1397,"mtime":1666702566365,"results":"38","hashOfConfig":"22"},{"size":1058,"mtime":1666700365400,"results":"39","hashOfConfig":"22"},{"size":586,"mtime":1666697658432,"results":"40","hashOfConfig":"22"},{"size":1305,"mtime":1666696035623,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"u2j5dd",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},"/home/ivan_lemon/avito_front_task/avito-front-task/src/index.tsx",[],["89","90"],"/home/ivan_lemon/avito_front_task/avito-front-task/src/Routes.tsx",["91"],"import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./Main\";\nimport ItemPage from \"./itemPage\";\nimport Main from \"./Main\";\nconst Routes: React.FC = () => (\n\t<div>\n\t\t<Switch>\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath=\"/\"\n\t\t\t\trender={() => (\n\t\t\t\t\t\t<Main/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<Route\n\t\t\t\tpath=\"/:id\"\n\t\t\t\trender={() => (\n\t\t\t\t\t<ItemPage/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</Switch>\n\t</div>\n);\n\nexport default Routes;\n","/home/ivan_lemon/avito_front_task/avito-front-task/src/itemPage.tsx",["92","93","94","95","96","97"],"import React, {useLayoutEffect} from 'react';\nimport logo from './logo.svg';\n//import {Counter} from './features/counter/Counter';\nimport './Main.css';\nimport {useHistory, useParams} from \"react-router-dom\";\nimport Item from \"./components/item\";\nimport Refresh from \"./components/refresh\";\nimport Header from \"./components/header\";\nimport { createBrowserHistory } from 'history';\nimport {ApplicationState} from \"./app/store\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {AnyAction} from \"redux\";\nimport {fetchPost, fetchRequest} from \"./app/store/post/action\";\nimport {connect} from \"react-redux\";\nimport {Post} from \"./app/store/post/types\";\nconst history = createBrowserHistory();\n\n\nconst ItemPage: React.FC<any> = (props)=> {\n\tconst params = useParams();\n\tuseLayoutEffect(() => {\n\t\tprops.fetchPost(Number(params.id))\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\tconsole.log('item',props)\nconst post = props.posts.find((el: { id: number; }) => el.id.toString() === params.id)\n\n\treturn (\n\t\t<div>\n\t\t\t<Header/>\n\t\t\t<Item postData={post?.post} postId={post?.id} key={post?.id}/>\n\t\t</div>\n\t);\n}\nconst mapStateToProps = ({posts}: ApplicationState) => {\n\treturn ({\n\t\tloading: posts.loading,\n\t\terrors: posts.errors,\n\t\tposts: posts.posts\n\t})};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n\treturn {\n\t\tfetchPost: (item: string) => dispatch(fetchPost(item))\n\t};\n\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemPage);\n","/home/ivan_lemon/avito_front_task/avito-front-task/src/Main.tsx",["98"],"import React, {useEffect} from 'react';\nimport './Main.css';\nimport Item from \"./components/item\";\nimport Header from \"./components/header\";\nimport {createBrowserHistory} from 'history';\nimport {connect} from \"react-redux\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {AnyAction} from \"redux\";\nimport {ApplicationState} from \"./app/store\";\nimport {fetchRequest} from \"./app/store/post/action\";\nimport {Post} from \"./app/store/post/types\";\n\ninterface PropsFromState {\n\tloading: boolean;\n\terrors?: string;\n\tposts: {id:number,post:Post|null}[];\n}\n\n\ninterface propsFromDispatch {\n\tfetchRequestAuto: () => any;\n\tfetchRequestHand: () => any;\n}\n\ntype AllProps = PropsFromState & propsFromDispatch;\n\nconst Main: React.FC<AllProps> = ({\n\t                                  loading,\n\t                                  errors,\n\t                                  posts,\n\t                                  fetchRequestAuto,\n\t                                  fetchRequestHand\n\n                                  }) => {\n\n\tuseEffect(() => {\n\t\tfetchRequestAuto();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\n\tlet listData = posts.map((post) => <Item postData={post.post} postId={post.id} key={post.id}/>)\n\treturn (\n\t\t<div>\n\t\t\t<Header refresh={fetchRequestHand} />\n\t\t\t{listData}\n\t\t</div>\n\t);\n}\n\nconst mapStateToProps = ({posts}: ApplicationState) => {\n\treturn ({\n\tloading: posts.loading,\n\terrors: posts.errors,\n\tposts: posts.posts\n})};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n\treturn {\n\t\tfetchRequestAuto: function foo() {\n\t\t\tdispatch(fetchRequest());\n\t\t\tsetInterval(foo, 60000)\n\t\t},\n\t\tfetchRequestHand: () => dispatch(fetchRequest())\n\n\t}\n\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","/home/ivan_lemon/avito_front_task/avito-front-task/src/components/item.tsx",["99","100","101","102","103","104","105"],"/home/ivan_lemon/avito_front_task/avito-front-task/src/components/header.tsx",[],"/home/ivan_lemon/avito_front_task/avito-front-task/src/components/refresh.tsx",[],"/home/ivan_lemon/avito_front_task/avito-front-task/src/configureStore.ts",[],"/home/ivan_lemon/avito_front_task/avito-front-task/src/App.tsx",[],"/home/ivan_lemon/avito_front_task/avito-front-task/src/mockData.js",[],"/home/ivan_lemon/avito_front_task/avito-front-task/src/app/store.ts",[],"/home/ivan_lemon/avito_front_task/avito-front-task/src/apiRoute.ts",[],"/home/ivan_lemon/avito_front_task/avito-front-task/src/app/hooks.ts",[],"/home/ivan_lemon/avito_front_task/avito-front-task/src/app/store/post/reducer.ts",["106"],"import {Reducer} from \"redux\";\nimport {Post, PostActionTypes, PostsState} from \"./types\";\n\nexport const initialState: PostsState = {\n\tposts: [{id: 0, post: null}],\n\terrors: undefined,\n\tloading: false\n};\n\n\n// @ts-ignore\nconst reducer: Reducer<PostsState> = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase PostActionTypes.FETCH_REQUEST: {\n\t\t\treturn {...state, loading: true};\n\t\t}\n\t\tcase PostActionTypes.FETCH_SUCCESS: {\n\t\t\tlet data: Array<number> = action.payload;\n\t\t\tlet map = data.map((id) => {\n\t\t\t\tconst el = state.posts.find(el => el.id === id);\n\t\t\t\treturn (!el) ? ({id: id, post: null}) : ({id: id, post: el.post})\n\t\t\t})\n\t\t\treturn {...state, loading: false, posts: map};\n\t\t}\n\t\tcase PostActionTypes.FETCH_ERROR: {\n\t\t\treturn {...state, loading: false, errors: action.payload};\n\t\t}\n\t\tcase PostActionTypes.FETCH_POST: {\n\t\t\tconst newPosts = state.posts.map((post) => {\n\t\t\t\tconst id: number = post.id;\n\t\t\t\tif (id === 0) {\n\t\t\t\t\treturn {id: action.payload.id, post: action.payload}\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\tid === action.payload.id\n\t\t\t\t\t\t? {id: action.payload.id, post: action.payload}\n\t\t\t\t\t\t: post\n\t\t\t\t)\n\t\t\t});\n\t\t\treturn {...state, loading: false, posts: newPosts};\n\t\t}\n\t\tcase PostActionTypes.FETCH_POST_ERROR: {\n\t\t\treturn {...state, loading: false, errors: action.payload};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\n\nexport {reducer as PostsReducer};","/home/ivan_lemon/avito_front_task/avito-front-task/src/app/store/post/action.ts",["107","108"],"import {Post, PostActionTypes} from \"./types\";\n\nimport { ActionCreator, Action, Dispatch } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport axios from 'axios'\nimport { ApplicationState } from \"../../store\";\nimport posts from \"../../../mockData\";\nimport API_ROUTE from \"../../../apiRoute\";\n\nexport type AppThunk = ActionCreator<\n\tThunkAction<void, ApplicationState, null, Action<string>>\n\t>;\n\nexport const fetchRequest: AppThunk = () => {\n\treturn async (dispatch: Dispatch) => {\n\t\ttry {\n\n\t\t\t// 100 последних из всех\n\t\t\tconst resAsk  = await axios.get(`${API_ROUTE}/newstories.json?print=pretty`);// 500\n\t\t\tconst data = resAsk.data.splice(0,5);\n\t\t\treturn dispatch({\n\t\t\t\ttype: PostActionTypes.FETCH_SUCCESS,\n\t\t\t\tpayload: data\n\t\t\t});\n\t\t} catch (e) {\n\t\t\treturn dispatch({\n\t\t\t\ttype: PostActionTypes.FETCH_ERROR\n\t\t\t});\n\t\t}\n\t};\n};\n\nexport const fetchPost: AppThunk =  item => {\n\treturn async (dispatch: Dispatch) => {\n\t\ttry {\n\t\t\tconst res  = await axios.get(`${API_ROUTE}/item/${item}.json?print=pretty`);\n\t\t\treturn dispatch({\n\t\t\t\ttype: PostActionTypes.FETCH_POST,\n\t\t\t\tpayload: res.data\n\t\t\t});\n\t\t} catch (e) {\n\t\t\treturn dispatch({\n\t\t\t\ttype: PostActionTypes.FETCH_POST_ERROR,\n\t\t\t\tpayload: null\n\t\t\t});\n\t\t}\n\t};\n};\n","/home/ivan_lemon/avito_front_task/avito-front-task/src/app/store/post/types.ts",[],"/home/ivan_lemon/avito_front_task/avito-front-task/src/components/comment.tsx",["109","110","111"],"/home/ivan_lemon/avito_front_task/avito-front-task/src/app/store/comments/reducer.ts",[],"/home/ivan_lemon/avito_front_task/avito-front-task/src/app/store/comments/types.ts",[],"/home/ivan_lemon/avito_front_task/avito-front-task/src/app/store/comments/action.ts",["112","113"],"import {Post, PostActionTypes} from \"./types\";\n\nimport { ActionCreator, Action, Dispatch } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport axios from 'axios'\nimport { ApplicationState } from \"../../store\";\nimport posts from \"../../../mockData\";\nimport API_ROUTE from \"../../../apiRoute\";\n\nexport type AppThunk = ActionCreator<\n\tThunkAction<void, ApplicationState, null, Action<string>>\n\t>;\n\n// export const fetchRequest: AppThunk = () => {\n// \treturn async (dispatch: Dispatch) => {\n// \t\ttry {\n//\n// \t\t\t// 100 последних из всех\n// \t\t\tconst resAsk  = await axios.get(`${API_ROUTE}/newstories.json?print=pretty`);// 500\n// \t\t\tconst data = resAsk.data.splice(0,5);\n// \t\t\treturn dispatch({\n// \t\t\t\ttype: PostActionTypes.FETCH_SUCCESS,\n// \t\t\t\tpayload: data\n// \t\t\t});\n// \t\t} catch (e) {\n// \t\t\treturn dispatch({\n// \t\t\t\ttype: PostActionTypes.FETCH_ERROR\n// \t\t\t});\n// \t\t}\n// \t};\n// };\n\nexport const fetchComment: AppThunk =  item => {\n\treturn async (dispatch: Dispatch) => {\n\t\ttry {\n\t\t\tconst res  = await axios.get(`${API_ROUTE}/item/${item}.json?print=pretty`);\n\t\t\tdebugger;\n\t\t\treturn dispatch({\n\t\t\t\ttype: PostActionTypes.FETCH_COMMENT,\n\t\t\t\tpayload: res.data\n\t\t\t});\n\t\t} catch (e) {\n\t\t\treturn dispatch({\n\t\t\t\ttype: PostActionTypes.FETCH_POST_ERROR,\n\t\t\t\tpayload: null\n\t\t\t});\n\t\t}\n\t};\n};\n",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":16},{"ruleId":"118","severity":1,"message":"122","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":12},{"ruleId":"118","severity":1,"message":"123","line":5,"column":9,"nodeType":"120","messageId":"121","endLine":5,"endColumn":19},{"ruleId":"118","severity":1,"message":"124","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":15},{"ruleId":"118","severity":1,"message":"125","line":13,"column":20,"nodeType":"120","messageId":"121","endLine":13,"endColumn":32},{"ruleId":"118","severity":1,"message":"126","line":15,"column":9,"nodeType":"120","messageId":"121","endLine":15,"endColumn":13},{"ruleId":"118","severity":1,"message":"127","line":16,"column":7,"nodeType":"120","messageId":"121","endLine":16,"endColumn":14},{"ruleId":"118","severity":1,"message":"128","line":5,"column":9,"nodeType":"120","messageId":"121","endLine":5,"endColumn":29},{"ruleId":"118","severity":1,"message":"129","line":10,"column":9,"nodeType":"120","messageId":"121","endLine":10,"endColumn":11},{"ruleId":"118","severity":1,"message":"130","line":10,"column":13,"nodeType":"120","messageId":"121","endLine":10,"endColumn":22},{"ruleId":"118","severity":1,"message":"131","line":11,"column":9,"nodeType":"120","messageId":"121","endLine":11,"endColumn":23},{"ruleId":"118","severity":1,"message":"132","line":14,"column":9,"nodeType":"120","messageId":"121","endLine":14,"endColumn":21},{"ruleId":"118","severity":1,"message":"133","line":36,"column":11,"nodeType":"120","messageId":"121","endLine":36,"endColumn":29},{"ruleId":"118","severity":1,"message":"134","line":40,"column":11,"nodeType":"120","messageId":"121","endLine":40,"endColumn":25},{"ruleId":"118","severity":1,"message":"135","line":45,"column":11,"nodeType":"120","messageId":"121","endLine":45,"endColumn":28},{"ruleId":"118","severity":1,"message":"126","line":2,"column":9,"nodeType":"120","messageId":"121","endLine":2,"endColumn":13},{"ruleId":"118","severity":1,"message":"126","line":1,"column":9,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"136","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":13},{"ruleId":"118","severity":1,"message":"137","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":42},{"ruleId":"118","severity":1,"message":"138","line":6,"column":9,"nodeType":"120","messageId":"121","endLine":6,"endColumn":18},{"ruleId":"118","severity":1,"message":"127","line":10,"column":7,"nodeType":"120","messageId":"121","endLine":10,"endColumn":14},{"ruleId":"118","severity":1,"message":"126","line":1,"column":9,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"136","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":13},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"@typescript-eslint/no-unused-vars","'HomePage' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'useHistory' is defined but never used.","'Refresh' is defined but never used.","'fetchRequest' is defined but never used.","'Post' is defined but never used.","'history' is assigned a value but never used.","'createBrowserHistory' is defined but never used.","'FC' is defined but never used.","'useEffect' is defined but never used.","'useAppDispatch' is defined but never used.","'fetchComment' is defined but never used.","'propsFromComponent' is defined but never used.","'PropsFromState' is defined but never used.","'propsFromDispatch' is defined but never used.","'posts' is defined but never used.","'useLayoutEffect' is defined but never used.","'fetchPost' is defined but never used.","no-global-assign","no-unsafe-negation"]